{"ast":null,"code":"var _jsxFileName = \"/Users/jubaer/one_shop/src/pages/Forms/form-validation.js\";\nimport React, { Component } from 'react';\nimport { Container, Row, Col, Card, CardBody, FormGroup, Button, Breadcrumb, BreadcrumbItem } from 'reactstrap';\nimport { activateAuthLayout } from '../../store/actions';\nimport { AvForm, AvField } from 'availity-reactstrap-validation';\nimport { Link, withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport Settingmenu from '../Subpages/Settingmenu';\n\nclass FormValidation extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  componentDidMount() {\n    this.props.activateAuthLayout();\n  }\n\n  render() {\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, React.createElement(Container, {\n      fluid: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"page-title-box\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, React.createElement(Row, {\n      className: \"align-items-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, React.createElement(Col, {\n      sm: \"6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      className: \"page-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, \"Form Validation\"), React.createElement(Breadcrumb, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(BreadcrumbItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"#\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, \"Veltrix\")), React.createElement(BreadcrumbItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"#\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, \"Forms\")), React.createElement(BreadcrumbItem, {\n      active: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, \"Form Validation\"))), React.createElement(Col, {\n      sm: \"6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"float-right d-none d-md-block\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(Settingmenu, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }))))), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(Col, {\n      lg: \"6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(Card, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(CardBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      className: \"mt-0 header-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, \"Validation type\"), React.createElement(\"p\", {\n      className: \"text-muted m-b-30 \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, \"Easy to use React validation components compatible for reactstrap\"), React.createElement(AvForm, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(AvField, {\n      name: \"username\",\n      label: \"Required  \",\n      placeholder: \"Type Something\",\n      type: \"text\",\n      errorMessage: \"Enter Name\",\n      validate: {\n        required: {\n          value: true\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"Equal To\"), React.createElement(AvField, {\n      name: \"password\",\n      type: \"text\",\n      placeholder: \"Password\",\n      errorMessage: \"Enter password\",\n      validate: {\n        required: {\n          value: true\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }), React.createElement(AvField, {\n      name: \"password1\",\n      type: \"text\",\n      placeholder: \"Re-type Password\",\n      errorMessage: \"Enter Re-password\",\n      validate: {\n        required: {\n          value: true\n        },\n        match: {\n          value: 'password'\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }), React.createElement(AvField, {\n      name: \"email\",\n      label: \"E-Mail  \",\n      placeholder: \"Enter Valid Email\",\n      type: \"email\",\n      errorMessage: \"Invalid Email\",\n      validate: {\n        required: {\n          value: true\n        },\n        email: {\n          value: true\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }), React.createElement(AvField, {\n      name: \"digits\",\n      label: \"Digits  \",\n      placeholder: \"Enter Only Digits\",\n      type: \"number\",\n      errorMessage: \"Enter Only Digits\",\n      validate: {\n        required: {\n          value: true\n        },\n        pattern: {\n          value: '^[0-9]+$',\n          errorMessage: 'Only Digits'\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }), React.createElement(AvField, {\n      name: \"number\",\n      label: \"Number  \",\n      placeholder: \"Enter Only number\",\n      type: \"number\",\n      errorMessage: \"Enter Only Number\",\n      validate: {\n        required: {\n          value: true\n        },\n        pattern: {\n          value: '^[0-9]+$',\n          errorMessage: 'Only Numbers'\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }), React.createElement(AvField, {\n      name: \"alphanumeric\",\n      label: \"Alphanumeric  \",\n      placeholder: \"Enter Only alphanumeric value\",\n      type: \"text\",\n      errorMessage: \"Enter Only Alphanumeric\",\n      validate: {\n        required: {\n          value: true\n        },\n        pattern: {\n          value: '^[0-9a-zA-Z]+$',\n          errorMessage: 'Only Alphanumeric'\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }), React.createElement(FormGroup, {\n      className: \"mb-0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"submit\",\n      color: \"primary\",\n      className: \"mr-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \"Submit\"), ' ', React.createElement(Button, {\n      type: \"reset\",\n      color: \"secondary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \"Cancel\"))))))), React.createElement(Col, {\n      lg: \"6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(Card, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(CardBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      className: \"mt-0 header-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, \"Range validation\"), React.createElement(\"p\", {\n      className: \"text-muted m-b-30 \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, \"Easy to use React validation components compatible for reactstrap.The polyfill can be applied into your web application by using tools like Webpack or Babel.\"), React.createElement(AvForm, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(AvField, {\n      name: \"Min_Length\",\n      label: \"Min Length  \",\n      placeholder: \"Min 6 chars\",\n      type: \"number\",\n      errorMessage: \"Min 6 chars.\",\n      validate: {\n        required: {\n          value: true\n        },\n        minLength: {\n          value: 6,\n          errorMessage: 'Min 6 chars.'\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }), React.createElement(AvField, {\n      name: \"Max_Length\",\n      label: \"Max Length  \",\n      placeholder: \"Max 6 chars\",\n      type: \"number\",\n      errorMessage: \"Max 6 chars.\",\n      validate: {\n        required: {\n          value: true\n        },\n        maxLength: {\n          value: 6,\n          errorMessage: 'Max 6 chars.'\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }), React.createElement(AvField, {\n      name: \"Min_Value\",\n      label: \"Min Value  \",\n      placeholder: \"Min 6 Chars\",\n      min: 6,\n      type: \"number\",\n      errorMessage: \"Min Value 6\",\n      validate: {\n        required: {\n          value: true\n        },\n        min: {\n          value: 6\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }), React.createElement(AvField, {\n      name: \"Max_Value\",\n      label: \"Max Value  \",\n      placeholder: \"max 5 Chars\",\n      max: 6,\n      type: \"number\",\n      errorMessage: \"Max Value 6\",\n      validate: {\n        required: {\n          value: true\n        },\n        max: {\n          value: 6\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }), React.createElement(AvField, {\n      name: \"Range_Value\",\n      label: \"Range Length  \",\n      placeholder: \"Text between 5 - 10 chars length\",\n      type: \"number\",\n      errorMessage: \"range between 5 to 10\",\n      validate: {\n        required: {\n          value: true\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }), React.createElement(AvField, {\n      name: \"Regular_Exp\",\n      label: \"Regular Exp  \",\n      placeholder: \"Hex. Color\",\n      type: \"number\",\n      errorMessage: \"Hex Value\",\n      validate: {\n        required: {\n          value: true\n        },\n        pattern: {\n          value: '^[#0-9]+$',\n          errorMessage: 'Only Hex Value'\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }), React.createElement(FormGroup, {\n      className: \"mb-0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"submit\",\n      color: \"primary\",\n      className: \"mr-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, \"Submit\"), ' ', React.createElement(Button, {\n      type: \"reset\",\n      color: \"secondary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, \"Cancel\"))))))))));\n  }\n\n}\n\nexport default withRouter(connect(null, {\n  activateAuthLayout\n})(FormValidation));","map":{"version":3,"sources":["/Users/jubaer/one_shop/src/pages/Forms/form-validation.js"],"names":["React","Component","Container","Row","Col","Card","CardBody","FormGroup","Button","Breadcrumb","BreadcrumbItem","activateAuthLayout","AvForm","AvField","Link","withRouter","connect","Settingmenu","FormValidation","constructor","props","state","componentDidMount","render","required","value","match","email","pattern","errorMessage","minLength","maxLength","min","max"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Container, Row, Col, Card, CardBody, FormGroup, Button, Breadcrumb, BreadcrumbItem } from 'reactstrap';\r\nimport { activateAuthLayout } from '../../store/actions';\r\nimport { AvForm, AvField } from 'availity-reactstrap-validation';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport Settingmenu from '../Subpages/Settingmenu';\r\n\r\nclass FormValidation extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.activateAuthLayout();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <Container fluid>\r\n                    <div className=\"page-title-box\">\r\n                        <Row className=\"align-items-center\">\r\n\r\n                            <Col sm=\"6\">\r\n                                <h4 className=\"page-title\">Form Validation</h4>\r\n                                <Breadcrumb>\r\n                                    <BreadcrumbItem><Link to=\"#\">Veltrix</Link></BreadcrumbItem>\r\n                                    <BreadcrumbItem><Link to=\"#\">Forms</Link></BreadcrumbItem>\r\n                                    <BreadcrumbItem active>Form Validation</BreadcrumbItem>\r\n                                </Breadcrumb>\r\n                            </Col>\r\n                            <Col sm=\"6\">\r\n\r\n                                <div className=\"float-right d-none d-md-block\">\r\n                                    <Settingmenu />\r\n                                </div>\r\n\r\n                            </Col>\r\n                        </Row>\r\n                    </div>\r\n\r\n                    <Row>\r\n                        <Col lg=\"6\">\r\n                            <Card>\r\n                                <CardBody>\r\n\r\n                                    <h4 className=\"mt-0 header-title\">Validation type</h4>\r\n                                    <p className=\"text-muted m-b-30 \">Easy to use React validation components compatible for reactstrap</p>\r\n\r\n                                    <AvForm>\r\n                                        <AvField name=\"username\" label=\"Required  \"\r\n                                            placeholder=\"Type Something\" type=\"text\" errorMessage=\"Enter Name\"\r\n                                            validate={{ required: { value: true } }} />\r\n                                        <label>Equal To</label>\r\n                                        <AvField name=\"password\" type=\"text\"\r\n                                            placeholder=\"Password\" errorMessage=\"Enter password\"\r\n                                            validate={{ required: { value: true } }} />\r\n                                        <AvField name=\"password1\" type=\"text\"\r\n                                            placeholder=\"Re-type Password\" errorMessage=\"Enter Re-password\"\r\n                                            validate={{ required: { value: true }, match: { value: 'password' } }} />\r\n                                        <AvField name=\"email\" label=\"E-Mail  \"\r\n                                            placeholder=\"Enter Valid Email\" type=\"email\" errorMessage=\"Invalid Email\"\r\n                                            validate={{ required: { value: true }, email: { value: true } }} />\r\n                                        <AvField name=\"digits\" label=\"Digits  \"\r\n                                            placeholder=\"Enter Only Digits\" type=\"number\" errorMessage=\"Enter Only Digits\"\r\n                                            validate={{ required: { value: true }, pattern: { value: '^[0-9]+$', errorMessage: 'Only Digits' } }} />\r\n                                        <AvField name=\"number\" label=\"Number  \"\r\n                                            placeholder=\"Enter Only number\" type=\"number\" errorMessage=\"Enter Only Number\"\r\n                                            validate={{ required: { value: true }, pattern: { value: '^[0-9]+$', errorMessage: 'Only Numbers' } }} />\r\n                                        <AvField name=\"alphanumeric\" label=\"Alphanumeric  \"\r\n                                            placeholder=\"Enter Only alphanumeric value\" type=\"text\"\r\n                                            errorMessage=\"Enter Only Alphanumeric\"\r\n                                            validate={{\r\n                                                required: { value: true },\r\n                                                pattern: { value: '^[0-9a-zA-Z]+$', errorMessage: 'Only Alphanumeric' }\r\n                                            }} />\r\n                                        <FormGroup className=\"mb-0\">\r\n                                            <div>\r\n                                                <Button type=\"submit\" color=\"primary\" className=\"mr-1\">\r\n                                                    Submit\r\n                                                    </Button>{' '}\r\n                                                <Button type=\"reset\" color=\"secondary\">\r\n                                                    Cancel\r\n                                                    </Button>\r\n                                            </div>\r\n                                        </FormGroup>\r\n                                    </AvForm>\r\n\r\n                                </CardBody>\r\n                            </Card>\r\n                        </Col>\r\n\r\n                        <Col lg=\"6\">\r\n                            <Card>\r\n                                <CardBody>\r\n\r\n                                    <h4 className=\"mt-0 header-title\">Range validation</h4>\r\n                                    <p className=\"text-muted m-b-30 \">Easy to use React validation components compatible for reactstrap.The polyfill can be applied into your web application by using tools like Webpack or Babel.</p>\r\n\r\n                                    <AvForm>\r\n                                        <AvField name=\"Min_Length\" label=\"Min Length  \"\r\n                                            placeholder=\"Min 6 chars\" type=\"number\" errorMessage=\"Min 6 chars.\"\r\n                                            validate={{ required: { value: true }, minLength: { value: 6, errorMessage: 'Min 6 chars.' } }} />\r\n                                        <AvField name=\"Max_Length\" label=\"Max Length  \"\r\n                                            placeholder=\"Max 6 chars\" type=\"number\" errorMessage=\"Max 6 chars.\"\r\n                                            validate={{ required: { value: true }, maxLength: { value: 6, errorMessage: 'Max 6 chars.' } }} />\r\n                                        <AvField name=\"Min_Value\" label=\"Min Value  \"\r\n                                            placeholder=\"Min 6 Chars\" min={6} type=\"number\" errorMessage=\"Min Value 6\"\r\n                                            validate={{ required: { value: true }, min: { value: 6 } }} />\r\n                                        <AvField name=\"Max_Value\" label=\"Max Value  \"\r\n                                            placeholder=\"max 5 Chars\" max={6} type=\"number\" errorMessage=\"Max Value 6\"\r\n                                            validate={{ required: { value: true }, max: { value: 6 } }} />\r\n                                        <AvField name=\"Range_Value\" label=\"Range Length  \"\r\n                                            placeholder=\"Text between 5 - 10 chars length\" type=\"number\"\r\n                                            errorMessage=\"range between 5 to 10\" validate={{ required: { value: true } }} />\r\n                                        <AvField name=\"Regular_Exp\" label=\"Regular Exp  \"\r\n                                            placeholder=\"Hex. Color\" type=\"number\" errorMessage=\"Hex Value\"\r\n                                            validate={{ required: { value: true }, pattern: { value: '^[#0-9]+$', errorMessage: 'Only Hex Value' } }} />\r\n                                        <FormGroup className=\"mb-0\">\r\n                                            <div>\r\n                                                <Button type=\"submit\" color=\"primary\" className=\"mr-1\">\r\n                                                    Submit\r\n                                                    </Button>{' '}\r\n                                                <Button type=\"reset\" color=\"secondary\">\r\n                                                    Cancel\r\n                                                    </Button>\r\n                                            </div>\r\n                                        </FormGroup>\r\n                                    </AvForm>\r\n\r\n                                </CardBody>\r\n                            </Card>\r\n                        </Col>\r\n                    </Row>\r\n\r\n                </Container>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(connect(null, { activateAuthLayout })(FormValidation));"]},"metadata":{},"sourceType":"module"}