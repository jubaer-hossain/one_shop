{"ast":null,"code":"var _jsxFileName = \"/Users/jubaer/one_shop/src/pages/Ui/ui-alerts.js\";\nimport React, { Component } from 'react';\nimport { Container, Row, Col, Card, CardBody, Breadcrumb, BreadcrumbItem, Alert } from 'reactstrap';\nimport { activateAuthLayout } from '../../store/actions';\nimport { Link, withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport Settingmenu from '../Subpages/Settingmenu';\n\nclass Uialerts extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  componentDidMount() {\n    this.props.activateAuthLayout();\n  }\n\n  render() {\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, React.createElement(Container, {\n      fluid: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"page-title-box\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, React.createElement(Row, {\n      className: \"align-items-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, React.createElement(Col, {\n      sm: \"6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      className: \"page-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, \"Alerts\"), React.createElement(Breadcrumb, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, React.createElement(BreadcrumbItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"#\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, \"Veltrix\")), React.createElement(BreadcrumbItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"#\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, \"UI Elements\")), React.createElement(BreadcrumbItem, {\n      active: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, \"Alerts\"))), React.createElement(Col, {\n      sm: \"6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"float-right d-none d-md-block\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(Settingmenu, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }))))), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(Col, {\n      lg: \"6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(Card, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(CardBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      className: \"mt-0 header-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, \"Examples\"), React.createElement(\"p\", {\n      className: \"text-muted m-b-30 \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, \"Alerts are available for any length of text, as well as an optional dismiss button. For proper styling, use one of the for \", React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, \"Color\"), \" (e.g., \", React.createElement(\"code\", {\n      className: \"highlighter-rouge\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, \"success\"), \"). For inline dismissal, use the alerts.\"), React.createElement(\"div\", {\n      className: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(Alert, {\n      color: \"success\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, \"Well done!\"), \" You successfully read this important alert message. \"), React.createElement(Alert, {\n      color: \"info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"Heads up!\"), \" This alert needs your attention, but it's not super important.\"), React.createElement(Alert, {\n      color: \"warning\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"Warning!\"), \" Better check yourself, you're not looking too good.\"), React.createElement(Alert, {\n      color: \"danger mb-0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \"Oh snap!\"), \" Change a few things up and try submitting again.\"))))), React.createElement(Col, {\n      lg: \"6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(Card, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(CardBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      className: \"mt-0 header-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \"Link color\"), React.createElement(\"p\", {\n      className: \"text-muted m-b-30 \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \"Use the \", React.createElement(\"code\", {\n      className: \"highlighter-rouge\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \"Link\"), \" utility className to quickly provide matching colored links within any alert.\"), React.createElement(\"div\", {\n      className: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(Alert, {\n      color: \"success\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \"Well done!\"), \" You successfully read \", React.createElement(Link, {\n      to: \"#\",\n      className: \"alert-link\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \"this important alert message\"), \".\"), React.createElement(Alert, {\n      color: \"info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"Heads up!\"), \" This \", React.createElement(Link, {\n      to: \"#\",\n      className: \"alert-link\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"alert needs your attention\"), \", but it's not super important.\"), React.createElement(Alert, {\n      color: \"warning\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \"Warning!\"), \" Better check yourself, you're \", React.createElement(Link, {\n      to: \"#\",\n      className: \"alert-link\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \"not looking too good\"), \".\"), React.createElement(Alert, {\n      color: \"danger mb-0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"Oh snap!\"), \" \", React.createElement(Link, {\n      to: \"#\",\n      className: \"alert-link\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"Change a few things up\"), \" and try submitting again.\")))))), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(Col, {\n      lg: \"6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(Card, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(CardBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      className: \"mt-0 header-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, \"Dismissing\"), React.createElement(\"p\", {\n      className: \"text-muted m-b-30 \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, \"You can see this in action with a live demo:\"), React.createElement(\"div\", {\n      className: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(Alert, {\n      color: \"success\",\n      isOpen: this.state.alert1,\n      toggle: () => this.setState({\n        alert1: false\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, \"Well done!\"), \" You successfully read this important alert message.\"), React.createElement(Alert, {\n      color: \"info\",\n      isOpen: this.state.alert2,\n      toggle: () => this.setState({\n        alert2: false\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, \"Heads up!\"), \" This alert needs your attention, but it's not super important.\"), React.createElement(Alert, {\n      color: \"warning\",\n      isOpen: this.state.alert3,\n      toggle: () => this.setState({\n        alert3: false\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, \"Warning!\"), \" Better check yourself, you're not looking too good.\"), React.createElement(Alert, {\n      color: \"danger\",\n      className: \"mb-0\",\n      isOpen: this.state.alert4,\n      toggle: () => this.setState({\n        alert4: false\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, \"Oh snap!\"), \" Change a few things up and try submitting again.\"))))), React.createElement(Col, {\n      lg: \"6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, React.createElement(Card, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, React.createElement(CardBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      className: \"mt-0 header-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, \"Additional content\"), React.createElement(\"p\", {\n      className: \"text-muted m-b-30 \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, \"Alerts can also contain additional HTML elements like headings and paragraphs.\"), React.createElement(\"div\", {\n      className: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(Alert, {\n      color: \"success\",\n      className: \"mb-0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      className: \"alert-heading font-18\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, \"Well done!\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, \"Aww yeah, you successfully read this important alert message. This example text is going to run a bit longer so that you can see how spacing within an alert works with this kind of content.\"), React.createElement(\"p\", {\n      className: \"mb-0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, \"Whenever you need to, be sure to use margin utilities to keep things nice and tidy.\"))))))), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, React.createElement(Col, {\n      lg: \"6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, React.createElement(Card, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, React.createElement(CardBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      className: \"mt-0 header-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, \"Examples\"), React.createElement(\"p\", {\n      className: \"text-muted m-b-30 \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, \"Alerts are available for any length of text, as well as an optional dismiss button. For proper styling, use one of the four \", React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, \"color\"), \" (e.g., \", React.createElement(\"code\", {\n      className: \"highlighter-rouge\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, \"warning\"), \" also we can pass class as \", React.createElement(\"code\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, \"bg-success\"), \" ). For inline dismissal, use the alerts.\"), React.createElement(\"div\", {\n      className: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, React.createElement(Alert, {\n      color: \"success\",\n      className: \"bg-success text-white\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, \"Well done!\"), \" You successfully read this important alert message.\"), React.createElement(Alert, {\n      color: \"info\",\n      className: \"bg-info text-white\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, \"Heads up!\"), \" This alert needs your attention, but it's not super important.\"), React.createElement(Alert, {\n      color: \"warning\",\n      className: \"bg-warning text-white\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, \"Warning!\"), \" Better check yourself, you're not looking too good.\"), React.createElement(Alert, {\n      color: \"danger\",\n      className: \"bg-danger text-white mb-0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, \"Oh snap!\"), \" Change a few things up and try submitting again.\"))))))));\n  }\n\n}\n\nexport default withRouter(connect(null, {\n  activateAuthLayout\n})(Uialerts));","map":{"version":3,"sources":["/Users/jubaer/one_shop/src/pages/Ui/ui-alerts.js"],"names":["React","Component","Container","Row","Col","Card","CardBody","Breadcrumb","BreadcrumbItem","Alert","activateAuthLayout","Link","withRouter","connect","Settingmenu","Uialerts","constructor","props","state","componentDidMount","render","alert1","setState","alert2","alert3","alert4"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Container, Row, Col, Card, CardBody, Breadcrumb, BreadcrumbItem, Alert } from 'reactstrap';\r\nimport { activateAuthLayout } from '../../store/actions';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport Settingmenu from '../Subpages/Settingmenu';\r\n\r\nclass Uialerts extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.activateAuthLayout();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <Container fluid>\r\n                    <div className=\"page-title-box\">\r\n                        <Row className=\"align-items-center\">\r\n                            <Col sm=\"6\">\r\n                                <h4 className=\"page-title\">Alerts</h4>\r\n                                <Breadcrumb>\r\n                                    <BreadcrumbItem><Link to=\"#\">Veltrix</Link></BreadcrumbItem>\r\n                                    <BreadcrumbItem><Link to=\"#\">UI Elements</Link></BreadcrumbItem>\r\n                                    <BreadcrumbItem active>Alerts</BreadcrumbItem>\r\n                                </Breadcrumb>\r\n                            </Col>\r\n                            <Col sm=\"6\">\r\n                                <div className=\"float-right d-none d-md-block\">\r\n                                    <Settingmenu />\r\n                                </div>\r\n                            </Col>\r\n                        </Row>\r\n                    </div>\r\n\r\n                    <Row>\r\n                        <Col lg=\"6\">\r\n                            <Card>\r\n                                <CardBody>\r\n                                    <h4 className=\"mt-0 header-title\">Examples</h4>\r\n                                    <p className=\"text-muted m-b-30 \">Alerts are available for any length of\r\n                                        text, as well as an optional dismiss button. For proper styling, use one\r\n                                            of the for <strong>Color</strong> (e.g., <code\r\n                                            className=\"highlighter-rouge\">success</code>). For inline\r\n                                            dismissal, use the alerts.</p>\r\n                                    <div className=\"\">\r\n                                        <Alert color=\"success\">\r\n                                            <strong>Well done!</strong> You successfully read this important alert message. </Alert>\r\n                                        <Alert color=\"info\">\r\n                                            <strong>Heads up!</strong> This alert needs your attention, but it's not super important.</Alert>\r\n                                        <Alert color=\"warning\">\r\n                                            <strong>Warning!</strong> Better check yourself, you're not looking too good.</Alert>\r\n                                        <Alert color=\"danger mb-0\">\r\n                                            <strong>Oh snap!</strong> Change a few things up and try submitting again.</Alert>\r\n                                    </div>\r\n                                </CardBody>\r\n                            </Card>\r\n                        </Col>\r\n\r\n                        <Col lg=\"6\">\r\n                            <Card>\r\n                                <CardBody>\r\n                                    <h4 className=\"mt-0 header-title\">Link color</h4>\r\n                                    <p className=\"text-muted m-b-30 \">Use the <code\r\n                                        className=\"highlighter-rouge\">Link</code> utility className to\r\n                                            quickly provide matching colored links within any alert.</p>\r\n                                    <div className=\"\">\r\n                                        <Alert color=\"success\">\r\n                                            <strong>Well done!</strong> You successfully read <Link to=\"#\" className=\"alert-link\">this important alert message</Link>.\r\n                                            </Alert>\r\n                                        <Alert color=\"info\">\r\n                                            <strong>Heads up!</strong> This <Link to=\"#\" className=\"alert-link\">alert needs your attention</Link>, but it's not super important.\r\n                                            </Alert>\r\n                                        <Alert color=\"warning\">\r\n                                            <strong>Warning!</strong> Better check yourself, you're <Link to=\"#\" className=\"alert-link\">not looking too good</Link>.\r\n                                            </Alert>\r\n                                        <Alert color=\"danger mb-0\">\r\n                                            <strong>Oh snap!</strong> <Link to=\"#\" className=\"alert-link\">Change a few things up</Link> and try submitting again.\r\n                                            </Alert>\r\n                                    </div>\r\n                                </CardBody>\r\n                            </Card>\r\n                        </Col>\r\n                    </Row>\r\n\r\n\r\n                    <Row>\r\n                        <Col lg=\"6\">\r\n                            <Card>\r\n                                <CardBody>\r\n                                    <h4 className=\"mt-0 header-title\">Dismissing</h4>\r\n                                    <p className=\"text-muted m-b-30 \">You can see this in action with a live demo:</p>\r\n\r\n                                    <div className=\"\">\r\n                                        <Alert color=\"success\" isOpen={this.state.alert1} toggle={() => this.setState({ alert1: false })}>\r\n                                            <strong>Well done!</strong> You successfully read this important alert message.\r\n                                        </Alert>\r\n                                        <Alert color=\"info\" isOpen={this.state.alert2} toggle={() => this.setState({ alert2: false })}>\r\n                                            <strong>Heads up!</strong> This alert needs your attention, but it's not super important.\r\n                                        </Alert>\r\n                                        <Alert color=\"warning\" isOpen={this.state.alert3} toggle={() => this.setState({ alert3: false })}>\r\n                                            <strong>Warning!</strong> Better check yourself, you're not looking too good.\r\n                                        </Alert>\r\n                                        <Alert color=\"danger\" className=\"mb-0\" isOpen={this.state.alert4} toggle={() => this.setState({ alert4: false })}>\r\n                                            <strong>Oh snap!</strong> Change a few things up and try submitting again.\r\n                                        </Alert>\r\n                                    </div>\r\n                                </CardBody>\r\n                            </Card>\r\n                        </Col>\r\n\r\n                        <Col lg=\"6\">\r\n                            <Card>\r\n                                <CardBody>\r\n                                    <h4 className=\"mt-0 header-title\">Additional content</h4>\r\n                                    <p className=\"text-muted m-b-30 \">Alerts can also contain additional HTML elements like headings and paragraphs.</p>\r\n                                    <div className=\"\">\r\n                                        <Alert color=\"success\" className=\"mb-0\">\r\n                                            <h4 className=\"alert-heading font-18\">Well done!</h4>\r\n                                            <p>Aww yeah, you successfully read this important alert message. This example text is going to run a bit longer so that you can see how spacing within an alert works with this kind of content.</p>\r\n                                            <p className=\"mb-0\">Whenever you need to, be sure to use margin utilities to keep things nice and tidy.</p>\r\n                                        </Alert>\r\n                                    </div>\r\n                                </CardBody>\r\n                            </Card>\r\n                        </Col>\r\n                    </Row>\r\n\r\n                    <Row>\r\n                        <Col lg=\"6\">\r\n                            <Card>\r\n                                <CardBody>\r\n                                    <h4 className=\"mt-0 header-title\">Examples</h4>\r\n                                    <p className=\"text-muted m-b-30 \">Alerts are available for any length of\r\n                                        text, as well as an optional dismiss button. For proper styling, use one\r\n                                            of the four <strong>color</strong> (e.g., <code\r\n                                            className=\"highlighter-rouge\">warning</code> also we can pass class as <code>bg-success</code> ). For inline\r\n                                            dismissal, use the alerts.</p>\r\n                                    <div className=\"\">\r\n                                        <Alert color=\"success\" className=\"bg-success text-white\">\r\n                                            <strong>Well done!</strong> You successfully read this important alert message.\r\n                                        </Alert>\r\n                                        <Alert color=\"info\" className=\"bg-info text-white\">\r\n                                            <strong>Heads up!</strong> This alert needs your attention, but it's not super important.\r\n                                        </Alert>\r\n                                        <Alert color=\"warning\" className=\"bg-warning text-white\">\r\n                                            <strong>Warning!</strong> Better check yourself, you're not looking too good.\r\n                                        </Alert>\r\n                                        <Alert color=\"danger\" className=\"bg-danger text-white mb-0\">\r\n                                            <strong>Oh snap!</strong> Change a few things up and try submitting again.\r\n                                        </Alert>\r\n                                    </div>\r\n                                </CardBody>\r\n                            </Card>\r\n                        </Col>\r\n                    </Row>\r\n\r\n                </Container>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(connect(null, { activateAuthLayout })(Uialerts));"]},"metadata":{},"sourceType":"module"}